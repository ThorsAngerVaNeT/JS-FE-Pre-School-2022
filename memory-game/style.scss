$anime-time: 8s;

$box-size: 168px;
$clip-distance: .05;
$clip-size: $box-size * (1 + $clip-distance * 2);
$path-width: 2px;

@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');

* {
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background-color: #020d18;
  color: #abb7c4;
  font-size: 18px;
  font-family: 'Roboto', sans-serif;
  overflow-x: hidden;

  &.bright{
    filter: brightness(3);
  }
}

.header {
  height: 90px;
  padding: 0 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: #0f2133;
  
  div:first-child {
    display: flex;
    align-items: center;
    gap: 20px;
  }
}

.logo {
  width: 64px;
  height: 64px;
  background-color: aliceblue;
  border-radius: 50%;
  /* filter: invert(82%) sepia(15%) saturate(232%) hue-rotate(170deg) brightness(87%) contrast(91%); */
  
  &:hover {
    animation: rotation 1s infinite linear;
  }
}

.main {
  max-width: 1440px;
  margin: 0 auto;
  padding: 40px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 40px;

  .score {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 40px;
    font-size: 24px;
    font-weight: bold;

    span {
      color:antiquewhite;
      
      &.last-turn {
        color: crimson;
      }
    }
    
  }
}

.footer-container {
  padding: 10px 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 20px;
  font-weight: 400;
  line-height: 50px;
  text-align: center;
  background-color: #0f2133;
  
  .footer-copyright {
    display: flex;
    gap: 20px;
  
    a {
      text-decoration: none;
      color: #abb7c4;
      transition: 0.5s;
    }
  
    a:hover {
      color: #66afe9;
    }
  }
  
  .rs-logo {
    height: 39.95px;
    vertical-align: middle;
    filter: invert(82%) sepia(15%) saturate(232%) hue-rotate(170deg) brightness(87%) contrast(91%);
  }
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}


.cards {
  display: grid;
  grid-template: repeat(3, 1fr)/repeat(6, 1fr);
  // grid-area: 1/1/6/6;
  gap: 40px;
  
  [data-matched=true] {
    transform: translate3d(0, 0, 0) rotateY(180deg);
  }
  
  .card {
    width: 132px;
    height: 168px;
    position: relative;    
    transform: translate3d(0, 0, 0);
    transform-style: preserve-3d;
    transition: transform 0.4s ease-out;
    border-radius: 10px;
    
    %card-shared {
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      background-clip: padding-box;
      backface-visibility: hidden;
      box-shadow: -6px -6px 36px 2px rgba(0, 0, 0, 0.15) inset;
      border-radius: 10px;
      // transition: transform 0.5s ease-in-out 0s;
    }

    .card-back {
      @extend %card-shared;
      background-color: #66afe9;
      transform: rotateY(0deg);
      // border: 30px solid;
      // border-image: url('./assets/svg/celtic-knot.svg') 800 305 round;
    }
  
    .card-front {
      @extend %card-shared;
      background-color: #abb7c4;
      transform: rotateY(180deg);      
    }

    &.selected,
    &[data-matched=true] {
      transform: translate3d(0, 0, 0) rotateY(180deg);
    }

    &[data-matched=true] .card-front {
      animation: lightning 2s linear 0.65s,
                matchSuccess 0.5s ease-out 0.65s;
    }

    svg {
      width: 100%;
      height: 100%;
      padding: 10px;
    }
  }
  
}

@keyframes lightning {
  0% {    
    box-shadow: 0 0 10px 6px rgba(255,255,255,1);
  }
  25% {
    box-shadow: 0 0 10px 6px rgba(255,255,255,0.75);
  }
  50% {
    box-shadow: 0 0 10px 6px rgba(255,255,255,0.5);
  }
  75% {
    box-shadow: 0 0 10px 6px rgba(255,255,255,0.25);
  }
  100%{
    box-shadow: 0 0 10px 6px rgba(255,255,255,0);
  }
  
}

@keyframes matchSuccess {
  0% {
    transform: translate3d(0, 0, 0) rotateY(180deg) scale(1);
  }
  50% {
    transform: translate3d(0, 0, 0) rotateY(180deg) scale(1.05);
  }
  100% {
    transform: translate3d(0, 0, 0) rotateY(180deg) scale(1);
  }  
}